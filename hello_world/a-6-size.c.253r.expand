
;; Function main (main, funcdef_no=6, decl_uid=2925, cgraph_uid=7, symbol_order=6)

int main ()
{
  int D.2928;
  int _7;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  printf ("Size of a char: %lu bytes\n", 1);
  printf ("Size of an int: %lu bytes\n", 4);
  printf ("Size of a long int: %lu bytes\n", 8);
  printf ("Size of a long long int: %lu bytes\n", 8);
  printf ("Size of a float: %lu bytes\n", 4);
  _7 = 0;
;;    succ:       3

;;   basic block 3, loop depth 0
;;    pred:       2
<L0>:
  return _7;
;;    succ:       EXIT

}



Partition map 

Partition 7 (_7 - 7 )
Partition 8 (_8(D) - 8 )


Coalescible Partition map 

Partition 0, base 0 (_8(D) - 8 )


Partition map 

Partition 0 (_8(D) - 8 )


Conflict graph:

After sorting:
Coalesce List:

Partition map 

Partition 0 (_8(D) - 8 )

After Coalescing:

Partition map 

Partition 0 (_7 - 7 )
Partition 1 (_8(D) - 8 )

int main ()
{
  int D.2928;
  int _7;
  int _8(D);

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  printf ("Size of a char: %lu bytes\n", 1);
  printf ("Size of an int: %lu bytes\n", 4);
  printf ("Size of a long int: %lu bytes\n", 8);
  printf ("Size of a long long int: %lu bytes\n", 8);
  printf ("Size of a float: %lu bytes\n", 4);
  _7 = 0;
;;    succ:       3

;;   basic block 3, loop depth 0
;;    pred:       2
<L0>:
  return _7;
;;    succ:       EXIT

}



;; Generating RTL for gimple basic block 2

;; printf ("Size of a char: %lu bytes\n", 1);

(insn 5 4 6 (set (reg:DI 4 si)
        (const_int 1 [0x1])) "6-size.c":18:2 -1
     (nil))

(insn 6 5 7 (set (reg:DI 84)
        (symbol_ref/f:DI ("*.LC0") [flags 0x2]  <var_decl 0x7fa5101ff360 *.LC0>)) "6-size.c":18:2 -1
     (nil))

(insn 7 6 8 (set (reg:DI 5 di)
        (reg:DI 84)) "6-size.c":18:2 -1
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC0") [flags 0x2]  <var_decl 0x7fa5101ff360 *.LC0>)
        (nil)))

(insn 8 7 9 (set (reg:QI 0 ax)
        (const_int 0 [0])) "6-size.c":18:2 -1
     (nil))

(call_insn 9 8 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7fa5100c6000 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) "6-size.c":18:2 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (nil)))))

;; printf ("Size of an int: %lu bytes\n", 4);

(insn 10 9 11 (set (reg:DI 4 si)
        (const_int 4 [0x4])) "6-size.c":19:2 -1
     (nil))

(insn 11 10 12 (set (reg:DI 85)
        (symbol_ref/f:DI ("*.LC1") [flags 0x2]  <var_decl 0x7fa5101ff3f0 *.LC1>)) "6-size.c":19:2 -1
     (nil))

(insn 12 11 13 (set (reg:DI 5 di)
        (reg:DI 85)) "6-size.c":19:2 -1
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC1") [flags 0x2]  <var_decl 0x7fa5101ff3f0 *.LC1>)
        (nil)))

(insn 13 12 14 (set (reg:QI 0 ax)
        (const_int 0 [0])) "6-size.c":19:2 -1
     (nil))

(call_insn 14 13 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7fa5100c6000 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) "6-size.c":19:2 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (nil)))))

;; printf ("Size of a long int: %lu bytes\n", 8);

(insn 15 14 16 (set (reg:DI 4 si)
        (const_int 8 [0x8])) "6-size.c":20:2 -1
     (nil))

(insn 16 15 17 (set (reg:DI 86)
        (symbol_ref/f:DI ("*.LC2") [flags 0x2]  <var_decl 0x7fa5101ff480 *.LC2>)) "6-size.c":20:2 -1
     (nil))

(insn 17 16 18 (set (reg:DI 5 di)
        (reg:DI 86)) "6-size.c":20:2 -1
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC2") [flags 0x2]  <var_decl 0x7fa5101ff480 *.LC2>)
        (nil)))

(insn 18 17 19 (set (reg:QI 0 ax)
        (const_int 0 [0])) "6-size.c":20:2 -1
     (nil))

(call_insn 19 18 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7fa5100c6000 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) "6-size.c":20:2 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (nil)))))

;; printf ("Size of a long long int: %lu bytes\n", 8);

(insn 20 19 21 (set (reg:DI 4 si)
        (const_int 8 [0x8])) "6-size.c":21:2 -1
     (nil))

(insn 21 20 22 (set (reg:DI 87)
        (symbol_ref/f:DI ("*.LC3") [flags 0x2]  <var_decl 0x7fa5101ff510 *.LC3>)) "6-size.c":21:2 -1
     (nil))

(insn 22 21 23 (set (reg:DI 5 di)
        (reg:DI 87)) "6-size.c":21:2 -1
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC3") [flags 0x2]  <var_decl 0x7fa5101ff510 *.LC3>)
        (nil)))

(insn 23 22 24 (set (reg:QI 0 ax)
        (const_int 0 [0])) "6-size.c":21:2 -1
     (nil))

(call_insn 24 23 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7fa5100c6000 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) "6-size.c":21:2 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (nil)))))

;; printf ("Size of a float: %lu bytes\n", 4);

(insn 25 24 26 (set (reg:DI 4 si)
        (const_int 4 [0x4])) "6-size.c":22:2 -1
     (nil))

(insn 26 25 27 (set (reg:DI 88)
        (symbol_ref/f:DI ("*.LC4") [flags 0x2]  <var_decl 0x7fa5101ff5a0 *.LC4>)) "6-size.c":22:2 -1
     (nil))

(insn 27 26 28 (set (reg:DI 5 di)
        (reg:DI 88)) "6-size.c":22:2 -1
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC4") [flags 0x2]  <var_decl 0x7fa5101ff5a0 *.LC4>)
        (nil)))

(insn 28 27 29 (set (reg:QI 0 ax)
        (const_int 0 [0])) "6-size.c":22:2 -1
     (nil))

(call_insn 29 28 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7fa5100c6000 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) "6-size.c":22:2 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (nil)))))

;; _7 = 0;

(insn 30 29 0 (set (reg:SI 82 [ _7 ])
        (const_int 0 [0])) "6-size.c":24:9 -1
     (nil))

;; Generating RTL for gimple basic block 3

;; <L0>:

(code_label 31 30 32 2 (nil) [0 uses])

(note 32 31 0 NOTE_INSN_BASIC_BLOCK)

;; return _7;

(insn 33 32 34 (set (reg:SI 83 [ <retval> ])
        (reg:SI 82 [ _7 ])) "6-size.c":24:9 -1
     (nil))

(jump_insn 34 33 35 (set (pc)
        (label_ref 0)) "6-size.c":24:9 -1
     (nil))

(barrier 35 34 0)


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 4 into block 2...
Merged blocks 2 and 4.
Merged 2 and 4 without moving.
Removing jump 34.
Merging block 5 into block 2...
Merged blocks 2 and 5.
Merged 2 and 5 without moving.


try_optimize_cfg iteration 2

fix_loop_structure: fixing up loops for function


;;
;; Full RTL generated for this function:
;;
(note 1 0 3 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL, VISITED)
;;  pred:       ENTRY (FALLTHRU)
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg:DI 4 si)
        (const_int 1 [0x1])) "6-size.c":18:2 -1
     (nil))
(insn 6 5 7 2 (set (reg:DI 84)
        (symbol_ref/f:DI ("*.LC0") [flags 0x2]  <var_decl 0x7fa5101ff360 *.LC0>)) "6-size.c":18:2 -1
     (nil))
(insn 7 6 8 2 (set (reg:DI 5 di)
        (reg:DI 84)) "6-size.c":18:2 -1
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC0") [flags 0x2]  <var_decl 0x7fa5101ff360 *.LC0>)
        (nil)))
(insn 8 7 9 2 (set (reg:QI 0 ax)
        (const_int 0 [0])) "6-size.c":18:2 -1
     (nil))
(call_insn 9 8 10 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7fa5100c6000 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) "6-size.c":18:2 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (nil)))))
(insn 10 9 11 2 (set (reg:DI 4 si)
        (const_int 4 [0x4])) "6-size.c":19:2 -1
     (nil))
(insn 11 10 12 2 (set (reg:DI 85)
        (symbol_ref/f:DI ("*.LC1") [flags 0x2]  <var_decl 0x7fa5101ff3f0 *.LC1>)) "6-size.c":19:2 -1
     (nil))
(insn 12 11 13 2 (set (reg:DI 5 di)
        (reg:DI 85)) "6-size.c":19:2 -1
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC1") [flags 0x2]  <var_decl 0x7fa5101ff3f0 *.LC1>)
        (nil)))
(insn 13 12 14 2 (set (reg:QI 0 ax)
        (const_int 0 [0])) "6-size.c":19:2 -1
     (nil))
(call_insn 14 13 15 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7fa5100c6000 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) "6-size.c":19:2 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (nil)))))
(insn 15 14 16 2 (set (reg:DI 4 si)
        (const_int 8 [0x8])) "6-size.c":20:2 -1
     (nil))
(insn 16 15 17 2 (set (reg:DI 86)
        (symbol_ref/f:DI ("*.LC2") [flags 0x2]  <var_decl 0x7fa5101ff480 *.LC2>)) "6-size.c":20:2 -1
     (nil))
(insn 17 16 18 2 (set (reg:DI 5 di)
        (reg:DI 86)) "6-size.c":20:2 -1
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC2") [flags 0x2]  <var_decl 0x7fa5101ff480 *.LC2>)
        (nil)))
(insn 18 17 19 2 (set (reg:QI 0 ax)
        (const_int 0 [0])) "6-size.c":20:2 -1
     (nil))
(call_insn 19 18 20 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7fa5100c6000 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) "6-size.c":20:2 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (nil)))))
(insn 20 19 21 2 (set (reg:DI 4 si)
        (const_int 8 [0x8])) "6-size.c":21:2 -1
     (nil))
(insn 21 20 22 2 (set (reg:DI 87)
        (symbol_ref/f:DI ("*.LC3") [flags 0x2]  <var_decl 0x7fa5101ff510 *.LC3>)) "6-size.c":21:2 -1
     (nil))
(insn 22 21 23 2 (set (reg:DI 5 di)
        (reg:DI 87)) "6-size.c":21:2 -1
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC3") [flags 0x2]  <var_decl 0x7fa5101ff510 *.LC3>)
        (nil)))
(insn 23 22 24 2 (set (reg:QI 0 ax)
        (const_int 0 [0])) "6-size.c":21:2 -1
     (nil))
(call_insn 24 23 25 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7fa5100c6000 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) "6-size.c":21:2 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (nil)))))
(insn 25 24 26 2 (set (reg:DI 4 si)
        (const_int 4 [0x4])) "6-size.c":22:2 -1
     (nil))
(insn 26 25 27 2 (set (reg:DI 88)
        (symbol_ref/f:DI ("*.LC4") [flags 0x2]  <var_decl 0x7fa5101ff5a0 *.LC4>)) "6-size.c":22:2 -1
     (nil))
(insn 27 26 28 2 (set (reg:DI 5 di)
        (reg:DI 88)) "6-size.c":22:2 -1
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC4") [flags 0x2]  <var_decl 0x7fa5101ff5a0 *.LC4>)
        (nil)))
(insn 28 27 29 2 (set (reg:QI 0 ax)
        (const_int 0 [0])) "6-size.c":22:2 -1
     (nil))
(call_insn 29 28 30 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7fa5100c6000 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) "6-size.c":22:2 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (nil)))))
(insn 30 29 33 2 (set (reg:SI 82 [ _7 ])
        (const_int 0 [0])) "6-size.c":24:9 -1
     (nil))
(insn 33 30 37 2 (set (reg:SI 83 [ <retval> ])
        (reg:SI 82 [ _7 ])) "6-size.c":24:9 -1
     (nil))
(insn 37 33 38 2 (set (reg/i:SI 0 ax)
        (reg:SI 83 [ <retval> ])) "6-size.c":25:1 -1
     (nil))
(insn 38 37 0 2 (use (reg/i:SI 0 ax)) "6-size.c":25:1 -1
     (nil))
;;  succ:       EXIT [always]  (FALLTHRU)

